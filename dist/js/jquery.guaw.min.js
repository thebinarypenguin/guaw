/*! GUAW: A GitHub User Activity Widget - v0.1.0 - 2014-06-23
* http://thebinarypenguin.github.io/guaw
* Copyright (c) 2014 Ethan Zimmerman; Licensed MIT */
!function(a){var b=function(b,c){var d=a(b),e=null,f=null,g=a.extend({username:"octocat",timeout:300,debug:!1},c),h=g.timeout,i={boilerplate:function(){return'<div class="guaw"><div class="guaw-head"></div><ul class="guaw-body"></ul><div class="guaw-foot"><a href="http://thebinarypenguin.github.io/guaw/">Powered by GUAW</a></div></div>'},profile:function(a){var b=a.avatar_url,c=a.name,d=a.login;return c?'<a href="https://github.com/'+d+'"><img src="'+b+'"></a><h4><a href="https://github.com/'+d+'">'+c+'</a></h4><small><a href="https://github.com/'+d+'">'+d+'</a></small><div class="clearfix"></div>':'<a href="https://github.com/'+d+'"><img src="'+b+'"></a><h4><a href="https://github.com/'+d+'">'+d+'</a></h4><div class="clearfix"></div>'},CommitCommentEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=a.payload.comment.html_url,f=a.payload.comment.commit_id.substring(0,7);return'<li id="'+b+'" class="commit-comment list-group-item">Commented on commit <a href="'+e+'">'+f+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},CreateEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=a.payload.ref_type,f=a.payload.ref;return"repository"===e?'<li id="'+b+'" class="create list-group-item">Created '+e+' <a href="https://github.com/'+d+'">'+d+"</a> <small>"+j.date(a.created_at)+"</small></li>":"branch"===e||"tag"===e?'<li id="'+b+'" class="create list-group-item">Created '+e+' <a href="https://github.com/'+d+"/tree/"+f+'">'+f+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>":void 0},DeleteEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=a.payload.ref_type,f=a.payload.ref;return'<li id="'+b+'" class="delete list-group-item">Deleted '+e+" "+f+' at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},DownloadEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=a.payload.download.name,f=a.payload.download.html_url;return'<li id="'+b+'" class="download list-group-item">Created download <a href="'+f+'">'+e+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},FollowEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.payload.target.login,e=a.payload.target.html_url;return'<li id="'+b+'" class="follow list-group-item">Started following <a href="'+e+'">'+d+"</a> <small>"+c+"</small></li>"},ForkApplyEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name;return'<li id="'+b+'" class="fork-apply list-group-item">Applied a patch to <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},ForkEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=a.payload.forkee.full_name;return'<li id="'+b+'" class="fork list-group-item">Forked <a href="https://github.com/'+d+'">'+d+'</a> to <a href="https://github.com/'+e+'">'+e+"</a> <small>"+c+"</small></li>"},GistEvent:function(a){var b=a.id,c=j.date(a.created_at),d=j.capitalize(a.payload.action)+"d",e=a.payload.gist.id,f=a.payload.gist.html_url;return'<li id="'+b+'" class="gist list-group-item">'+d+' gist <a href="'+f+'">'+e+"</a> <small>"+c+"</small></li>"},GollumEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name;return'<li id="'+b+'" class="gollum list-group-item">Edited the wiki at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},IssueCommentEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=j.issueType(a.payload.issue),f=a.payload.issue.number,g=null;return g="pull request"===e?a.payload.issue.pull_request.html_url+"#issuecomment-"+a.payload.comment.id:a.payload.comment.html_url,'<li id="'+b+'" class="issue-comment list-group-item">Commented on '+e+' <a href="'+g+'">#'+f+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},IssuesEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=j.capitalize(a.payload.action),f=a.payload.issue.number,g=a.payload.issue.html_url;return'<li id="'+b+'" class="issues list-group-item">'+e+' issue <a href="'+g+'">#'+f+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},MemberEvent:function(a){var b=a.id,c=(j.date(a.created_at),a.repo.name),d=a.payload.member.login,e=a.payload.member.html_url;return'<li id="'+b+'" class="member list-group-item">Added <a href="'+e+'">'+d+'</a> to <a href="https://github.com/'+c+'">'+c+"</a> <small>"+j.date(a.created_at)+"</small></li>"},PublicEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name;return'<li id="'+b+'" class="public list-group-item">Open sourced repository <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},PullRequestEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=j.capitalize(a.payload.action);return pullRequestID=a.payload.number,'<li id="'+b+'" class="pull-request list-group-item">'+e+' pull request <a href="https://github.com/'+d+"/pull/"+pullRequestID+'">#'+pullRequestID+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},PullRequestReviewCommentEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=a.payload.comment.html_url,f=j.tail(a.payload.comment.pull_request_url);return'<li id="'+b+'" class="pull-request-review-comment list-group-item">Commented on pull request <a href="'+e+'">#'+f+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},PushEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=1===a.payload.size?"1 commit ":a.payload.size+" commits ",f=j.tail(a.payload.ref);return'<li id="'+b+'" class="push list-group-item">Pushed '+e+'to <a href="https://github.com/'+d+"/tree/"+f+'">'+f+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},ReleaseEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name,e=a.payload.release.name,f=a.payload.release.html_url;return'<li id="'+b+'" class="release list-group-item">Created release <a href="'+f+'">'+e+'</a> at <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"},WatchEvent:function(a){var b=a.id,c=j.date(a.created_at),d=a.repo.name;return'<li id="'+b+'" class="watch list-group-item">Starred repository <a href="https://github.com/'+d+'">'+d+"</a> <small>"+c+"</small></li>"}},j={capitalize:function(a){return a.charAt(0).toUpperCase()+a.slice(1)},date:function(a){var b=new Date(a);return b.getMonth()+1+"-"+b.getDate()+"-"+b.getFullYear()},issueType:function(a){return a.pull_request&&a.pull_request.html_url&&a.pull_request.diff_url&&a.pull_request.patch_url?"pull request":"issue"},tail:function(a){return a.split("/").pop()}},k=function(a){h=g.timeout,a>h&&(h=a)},l=function(){var b="https://api.github.com/users/"+g.username,c=a.ajax({url:b,headers:{Accept:"application/vnd.github.v3+json"},dataType:"json",ifModified:!0});return c.done(function(a,c,d){g.debug&&console.log("Fetch "+b+" ("+d.status+" "+d.statusText+")"),a&&e.html(i.profile(a))}),c.fail(function(a){g.debug&&console.log("Fetch "+b+" ("+a.status+" "+a.statusText+")")}),c},m=function(b){var c="https://api.github.com/users/"+g.username+"/events/public?page="+b,d=a.ajax({url:c,headers:{Accept:"application/vnd.github.v3+json"},dataType:"json",ifModified:!0});return d.done(function(a,d,e){if(k(e.getResponseHeader("X-Poll-Interval")),g.debug&&console.log("Fetch "+c+" ("+e.status+" "+e.statusText+")"),a){for(var h="",j=0;j<a.length;j++)i[a[j].type]&&(h+=i[a[j].type](a[j]));1===b&&f.html(""),f.append(h)}}),d.fail(function(a){k(a.getResponseHeader("X-Poll-Interval")),g.debug&&console.log("Fetch "+c+" ("+a.status+" "+a.statusText+")")}),d},n=function(){l().then(function(){return m(1)}).then(function(){return m(2)}).then(function(){return m(3)}).then(function(){return m(4)}).then(function(){return m(5)}).then(function(){return m(6)}).then(function(){return m(7)}).then(function(){return m(8)}).then(function(){return m(9)}).then(function(){return m(10)}).always(function(){setTimeout(n,1e3*h)})},o=function(){d.append(i.boilerplate()),e=d.find(".guaw-head"),f=d.find(".guaw-body"),g.debug&&console.log("Settings: ",g),n()};o()};a.fn.guaw=function(a){return this.each(function(){b(this,a)}),this}}(jQuery,window,document);