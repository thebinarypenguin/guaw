/*! GUAW: A GitHub User Activity Widget - v0.4.0 - 2014-07-12
* http://thebinarypenguin.github.io/guaw
* Copyright (c) 2014 Ethan Zimmerman; Licensed MIT */
!function(a,b,c,d){"use strict";function e(b,c){this.container=a(b),this.widgetHead=null,this.widgetBody=null,this.settings=a.extend({},f,c),this.realTimeout=this.settings.timeout,this.init()}var f={username:"octocat",timeout:300,debug:!1},g=function(){var c={capitalize:function(a){return a.charAt(0).toUpperCase()+a.slice(1)},date:function(c){var d=new Date(c);return b.moment?b.moment(d).fromNow():a.timeago?a.timeago(d):d.getMonth()+1+"-"+d.getDate()+"-"+d.getFullYear()},issueType:function(a){return a.pull_request&&a.pull_request.html_url&&a.pull_request.diff_url&&a.pull_request.patch_url?"pull request":"issue"},tail:function(a){return a.split("/").pop()}},d={boilerplate:function(){return'<div class="guaw"><div class="guaw-head"></div><ul class="guaw-body"></ul><div class="guaw-foot"><a href="http://thebinarypenguin.github.io/guaw/">Powered by GUAW</a></div></div>'},profileWithName:function(a){var b=a.avatar_url,c=a.name,d=a.login;return'<a href="https://github.com/'+d+'"><img src="'+b+'"></a><h4><a href="https://github.com/'+d+'">'+c+'</a></h4><small><a href="https://github.com/'+d+'">'+d+'</a></small><div class="clearfix"></div>'},profileWithoutName:function(a){var b=a.avatar_url,c=a.login;return'<a href="https://github.com/'+c+'"><img src="'+b+'"></a><h4><a href="https://github.com/'+c+'">'+c+'</a></h4><div class="clearfix"></div>'},commentOnCommit:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.comment.html_url,g=a.payload.comment.commit_id.substring(0,7);return'<li id="'+b+'" class="list-group-item">Commented on commit <a href="'+f+'">'+g+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},createRepository:function(a){{var b=a.id,d=c.date(a.created_at),e=a.repo.name;a.payload.ref}return'<li id="'+b+'" class="list-group-item">Created repository <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},createBranch:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.ref;return'<li id="'+b+'" class="list-group-item">Created branch <a href="https://github.com/'+e+"/tree/"+f+'">'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},createTag:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.ref;return'<li id="'+b+'" class="list-group-item">Created tag <a href="https://github.com/'+e+"/tree/"+f+'">'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},deleteBranch:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.ref;return'<li id="'+b+'" class="list-group-item">Deleted branch '+f+' at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},deleteTag:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.ref;return'<li id="'+b+'" class="list-group-item">Deleted tag '+f+' at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},createDownload:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.download.name,g=a.payload.download.html_url;return'<li id="'+b+'" class="list-group-item">Created download <a href="'+g+'">'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},followUser:function(a){var b=a.id,d=c.date(a.created_at),e=a.payload.target.login,f=a.payload.target.html_url;return'<li id="'+b+'" class="list-group-item">Started following <a href="'+f+'">'+e+"</a> <small>"+d+"</small></li>"},applyPatch:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name;return'<li id="'+b+'" class="list-group-item">Applied a patch to <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},forkRepository:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.forkee.full_name;return'<li id="'+b+'" class="list-group-item">Forked <a href="https://github.com/'+e+'">'+e+'</a> to <a href="https://github.com/'+f+'">'+f+"</a> <small>"+d+"</small></li>"},createGist:function(a){var b=a.id,d=c.date(a.created_at),e=a.payload.gist.id,f=a.payload.gist.html_url;return'<li id="'+b+'" class="list-group-item">Created gist <a href="'+f+'">'+e+"</a> <small>"+d+"</small></li>"},updateGist:function(a){var b=a.id,d=c.date(a.created_at),e=a.payload.gist.id,f=a.payload.gist.html_url;return'<li id="'+b+'" class="list-group-item">Updated gist <a href="'+f+'">'+e+"</a> <small>"+d+"</small></li>"},editWiki:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name;return'<li id="'+b+'" class="list-group-item">Edited the wiki at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},commentOnIssue:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.issue.number,g=a.payload.comment.html_url;return'<li id="'+b+'" class="list-group-item">Commented on issue <a href="'+g+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},commentOnPullRequest:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.issue.number,g=a.payload.issue.pull_request.html_url+"#issuecomment-"+a.payload.comment.id;return'<li id="'+b+'" class="list-group-item">Commented on pull request <a href="'+g+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},openIssue:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.issue.number,g=a.payload.issue.html_url;return'<li id="'+b+'" class="list-group-item">Opened issue <a href="'+g+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},closeIssue:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.issue.number,g=a.payload.issue.html_url;return'<li id="'+b+'" class="list-group-item">Closed issue <a href="'+g+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},reopenIssue:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.issue.number,g=a.payload.issue.html_url;return'<li id="'+b+'" class="list-group-item">Reopened issue <a href="'+g+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},addUserToRepository:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.member.login,g=a.payload.member.html_url;return'<li id="'+b+'" class="list-group-item">Added <a href="'+g+'">'+f+'</a> to <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},openSourceRepository:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name;return'<li id="'+b+'" class="list-group-item">Open sourced repository <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},openPullRequest:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.number;return'<li id="'+b+'" class="list-group-item">Opened pull request <a href="https://github.com/'+e+"/pull/"+f+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},closePullRequest:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.number;return'<li id="'+b+'" class="list-group-item">Closed pull request <a href="https://github.com/'+e+"/pull/"+f+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},reopenPullRequest:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.number;return'<li id="'+b+'" class="list-group-item">Reopened pull request <a href="https://github.com/'+e+"/pull/"+f+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},synchronizePullRequest:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.number;return'<li id="'+b+'" class="list-group-item">Synchronized pull request <a href="https://github.com/'+e+"/pull/"+f+'">#'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},commentOnPullRequestDiff:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.comment.html_url,g=c.tail(a.payload.comment.pull_request_url);return'<li id="'+b+'" class="list-group-item">Commented on pull request <a href="'+f+'">#'+g+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},pushToBranch:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=1===a.payload.size?"1 commit ":a.payload.size+" commits ",g=c.tail(a.payload.ref);return'<li id="'+b+'" class="list-group-item">Pushed '+f+'to <a href="https://github.com/'+e+"/tree/"+g+'">'+g+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},createRelease:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name,f=a.payload.release.name,g=a.payload.release.html_url;return'<li id="'+b+'" class="list-group-item">Created release <a href="'+g+'">'+f+'</a> at <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"},starRepository:function(a){var b=a.id,d=c.date(a.created_at),e=a.repo.name;return'<li id="'+b+'" class="list-group-item">Starred repository <a href="https://github.com/'+e+'">'+e+"</a> <small>"+d+"</small></li>"}},e=function(a,b){if("boilerplate"===a)return d.boilerplate();if("profile"===a)return b.name?d.profileWithName(b):d.profileWithoutName(b);if("event"===a){if("CommitCommentEvent"===b.type)return d.commentOnCommit(b);if("CreateEvent"===b.type&&"repository"===b.payload.ref_type)return d.createRepository(b);if("CreateEvent"===b.type&&"branch"===b.payload.ref_type)return d.createBranch(b);if("CreateEvent"===b.type&&"tag"===b.payload.ref_type)return d.createTag(b);if("DeleteEvent"===b.type&&"branch"===b.payload.ref_type)return d.deleteBranch(b);if("DeleteEvent"===b.type&&"tag"===b.payload.ref_type)return d.deleteTag(b);if("DownloadEvent"===b.type)return d.createDownload(b);if("FollowEvent"===b.type)return d.followUser(b);if("ForkApplyEvent"===b.type)return d.applyPatch(b);if("ForkEvent"===b.type)return d.forkRepository(b);if("GistEvent"===b.type&&"create"===b.payload.action)return d.createGist(b);if("GistEvent"===b.type&&"update"===b.payload.action)return d.updateGist(b);if("GollumEvent"===b.type)return d.editWiki(b);if("IssueCommentEvent"===b.type&&"issue"===c.issueType(b.payload.issue))return d.commentOnIssue(b);if("IssueCommentEvent"===b.type&&"pull request"===c.issueType(b.payload.issue))return d.commentOnPullRequest(b);if("IssuesEvent"===b.type&&"opened"===b.payload.action)return d.openIssue(b);if("IssuesEvent"===b.type&&"closed"===b.payload.action)return d.closeIssue(b);if("IssuesEvent"===b.type&&"reopened"===b.payload.action)return d.reopenIssue(b);if("MemberEvent"===b.type)return d.addUserToRepository(b);if("PublicEvent"===b.type)return d.openSourceRepository(b);if("PullRequestEvent"===b.type&&"opened"===b.payload.action)return d.openPullRequest(b);if("PullRequestEvent"===b.type&&"closed"===b.payload.action)return d.closePullRequest(b);if("PullRequestEvent"===b.type&&"reopened"===b.payload.action)return d.reopenPullRequest(b);if("PullRequestEvent"===b.type&&"synchronized"===b.payload.action)return d.synchronizePullRequest(b);if("PullRequestReviewCommentEvent"===b.type)return d.commentOnPullRequestDiff(b);if("PushEvent"===b.type)return d.pushToBranch(b);if("ReleaseEvent"===b.type)return d.createRelease(b);if("WatchEvent"===b.type)return d.starRepository(b)}};return{boilerplate:function(){return e("boilerplate")},profile:function(a){return e("profile",a)},event:function(a){return e("event",a)}}}();a.extend(e.prototype,{init:function(){this.container.append(g.boilerplate()),this.widgetHead=this.container.find(".guaw-head"),this.widgetBody=this.container.find(".guaw-body"),this.settings.debug&&console.log("Settings: ",this.settings),this.poll()},poll:function(){var b=this;b.fetchProfile().then(b.fetchActivity).always(function(){setTimeout(a.proxy(b.poll,b),1e3*b.realTimeout)})},fetchProfile:function(){var b,c;return b="https://api.github.com/users/"+this.settings.username,c=a.ajax({url:b,headers:{Accept:"application/vnd.github.v3+json"},dataType:"json",ifModified:!0,context:this}),c.done(function(a,c,d){this.settings.debug&&console.log("Fetch "+b+" ("+d.status+" "+d.statusText+")"),a&&(this.settings.debug&&console.log(a),this.widgetHead.html(g.profile(a)))}),c.fail(function(a){this.settings.debug&&console.log("Fetch "+b+" ("+a.status+" "+a.statusText+")")}),c},fetchActivity:function(){var b,c,e;return b=this,c=new a.Deferred,e=function(f){var h,i;h="https://api.github.com/users/"+b.settings.username+"/events/public",f===d&&(f=h),i=a.ajax({url:f,headers:{Accept:"application/vnd.github.v3+json"},dataType:"json",ifModified:!0,context:b}),i.done(function(a,b,d){var i,j,k;if(this.settings.debug&&console.log("Fetch "+f+" ("+d.status+" "+d.statusText+")"),this.setRealTimeout(d.getResponseHeader("X-Poll-Interval")),a){for(this.settings.debug&&console.log(a),i="",k=0;k<a.length;k++)i+=g.event(a[k]);f===h?this.widgetBody.html("").append(i):this.widgetBody.append(i),j=/<(\S+)>; rel="next"/.exec(d.getResponseHeader("Link")),j&&e(j[1])}c.resolve()}),i.fail(function(a){this.settings.debug&&console.log("Fetch "+f+" ("+a.status+" "+a.statusText+")"),this.setRealTimeout(a.getResponseHeader("X-Poll-Interval")),c.reject()})},e(),c.promise()},setRealTimeout:function(a){this.realTimeout=this.settings.timeout,a>this.realTimeout&&(this.realTimeout=a)}}),a.fn.guaw=function(b){return this.each(function(){a.data(this,"guaw_plugin")||a.data(this,"guaw_plugin",new e(this,b))}),this}}(jQuery,window,document);